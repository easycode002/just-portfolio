name: Build and Deploy to Vercel

on:
  push:
    branches:
      - main  # Adjust this to your default branch (e.g., "main" or "master")
  pull_request:
    branches:
      - main  # Optional: Trigger on PRs to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js (version 20.x.x)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x.x'

      # Install dependencies with --legacy-peer-deps flag to resolve dependency conflicts
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Build the project
      - name: Build the project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure deploy job runs only after build job completes
    environment: production  # Optional: You can specify an environment (e.g., production)

    steps:
      # Checkout code again to ensure it's available in the deploy job
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js (same version for consistency)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x.x'

      # Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-branch: ${{ github.ref }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

          # sfsfsf